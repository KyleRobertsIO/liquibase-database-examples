services:

  pg_server:
    container_name: postgres_server
    build:
      context: ./services/containers/database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_ROOT_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      LIQUIBASE_ADMIN_USERNAME: ${LIQUIBASE_ADMIN_USERNAME}
      LIQUIBASE_ADMIN_PASSWORD: ${LIQUIBASE_ADMIN_PASSWORD}
      LIQUIBASE_DEFAULT_SCHEMA: ${LIQUIBASE_DEFAULT_SCHEMA}
    ports:
      - "$POSTGRES_PORT:5432"
    healthcheck:
      test: /db_setup/healthcheck.sh
      interval: 1s
      timeout: 1s
      retries: 1000
      start_period: 1s
  
  liquibase:
    container_name: liquibase
    environment:
      LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: ${LIQUIBASE_DEFAULT_SCHEMA}
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog/changelog.sql
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DATABASE
      LIQUIBASE_COMMAND_USERNAME: ${LIQUIBASE_ADMIN_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${LIQUIBASE_ADMIN_PASSWORD}
      LIQUIBASE_COMMAND_DRIVER: org.postgresql.Driver
    image: liquibase/liquibase:4.29
    command: update
    volumes:
      - ./services/database/liquibase/changelog.sql:/liquibase/changelog/changelog.sql
    depends_on:
      pg_server:
        condition: service_healthy